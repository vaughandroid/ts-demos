{
  "name": "dependency-injection",
  "version": "1.0.0",
  "description": "Demo for various approaches to dependency injection in TS",
  "devDependencies": {
    "@types/mocha": "^10.0.1",
    "@types/node": "^20.5.7",
    "@types/sinon": "^10.0.16",
    "mocha": "^10.2.0",
    "sinon": "^15.2.0",
    "ts-node": "^10.9.1"
  },
  "scripts": {
    "test": "mocha",
    "all": "npm run class-based && npm run class-based-without-interfaces && npm run function-based && npm run class-based-factory-injection && npm run function-based-factory-injection",
    "class-based": "ts-node src/class-based/main.ts",
    "class-based-factory-injection": "ts-node src/factory-injection/class-based.ts",
    "class-based-without-interfaces": "ts-node src/class-based-without-interfaces/main.ts",
    "function-based": "ts-node src/class-based/main.ts",
    "function-based-factory-injection": "ts-node src/factory-injection/function-based.ts"
  },
  "type": "module",
  "mocha": {
    "exit": true,
    "recursive": true,
    "require": "ts-node/register",
    "loader": "ts-node/esm",
    "full-trace": true,
    "extension": [
      "ts"
    ]
  }
}
